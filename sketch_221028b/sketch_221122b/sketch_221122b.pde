//Пример 5-16: Границы круга

/*
Следующие два
 примера показывают, как проверить, находится курсор в пределах круга или
 прямоугольника, или нет. Код составлен из отдельных модулей с переменными,
 поэтому вы сможете использовать его для проверки любого круга или
 прямоугольника просто заменив несколько величин.
 */

/*
Для проверки круга мы применим функцию dist() для определения расстояния от
 центра круга до курсора, а затем сравним это расстояние с радиусом круга (Рис.
 5-3). Если оно меньше, мы будем знать, что курсор внутри круга. В следующем
 примере, когда курсор попадает в круг, размер круга увеличивается
 */

//int x = 120;
//int y = 60;
//int radius = 12;

//void setup(){
//  size(240,120);
//  smooth ();
//  ellipseMode(RADIUS);
//}

//void draw(){
//  background(204);
//  float d = dist(mouseX, mouseY, x, y);
//  if (d < radius) {
//    radius++;
//    fill(0);
//  }else {
//    fill(255);
//  }
//  ellipse(x, y, radius, radius);
//}

//Пример 5-17: Границы прямоугольника

int x = 80;
int y = 30;
int w = 80;
int h = 60;

void setup() {
  size (240, 120);
}

void draw () {
  background(204);
  if ((mouseX > x) && (mouseX < x+w) && 
    (mouseY > y) && (mouseY < y+h)) {
    fill(0);
  } else {
    fill(255);
  }
  rect(x, y, w, h);
}

/*
Выражение в операторе if несколько сложнее, чем те, что мы видели раньше.
Чтобы убедиться в том, что все четыре выражения (mouseX > x, и др.)
истинны, они собраны в одно выражение с помощью логического И -
символа &&. Если хотя бы одно выражение ложно, все выражение будет
ложно, и прямоугольник не изменит цвет на черный. Символ && будет
обсуждаться далее
*/
