// 7 Движение
/*
-------------Пример 7-1 Частота кадров
 Processing “прокручивает” код в блоке draw() 60 раз в секунду для создания
 плавного движения. Чтобы убедиться в этом, запустите программу и
 понаблюдайте за значениями на консоли. Переменная frameRate контролирует
 скорость выполнения программы.
 */

//viod draw(){
//  println(rameRate);
//}

/*
--------------Пример 7-2 Устанавливаем частоту кадров
 Функция frameRate() изменяет скорость выполнения программы. В следующей
 программе удалите знаки // и оцените результат:
 */
//PImage img;
//PImage img1;

//void setup() {
//  size(480, 480);
//  img = loadImage("qwerty.jpeg");

//  img1 = loadImage("qwerty1.jpg");
//  //frameRate(30); // 30 кадров в секунду
//  //frameRate(12); // 12 кадров в секунду
//  //frameRate(2); // 2 кадра в секунду
//  frameRate(0.5); // 1 кадр каждые 2 секунды
//}

//void draw() {
//  image(img, 0, 0);
//  image(img1,240,0);
//  println(frameRate);

//}
//---------------------Пример 7-3: Передвигаем фигуру------стр 106

//int radius = 40;
//float x = -radius;
//float speed = 0.5;

//void setup() {
//  size(240, 120);
//  ellipseMode(RADIUS);
//}

//void draw() {
//  background(0);
//  x += speed; // Increase the value of x
//  arc(x, 60, radius, radius, 0.52, 5.76);
//}

/*
Когда вы запустите этот код, вы заметите, что фигура выходит за правую
 границу окна, когда значение переменной x превышает его ширину.
 Величина x по-прежнему растет, но фигура уже не видна.
 */

//------------------Пример 7-4: Разворот------------стр 107

int radius = 40;
float x = -radius;
float speed = 0.5;

void setup() {
  size(240, 120);
  smooth();
  ellipseMode(RADIUS);
}

void draw(){
  background(0);
  x += speed;                        // Увеличение x
  if (x > width + radius) {           // Если фигура вышла за край окна
    x = -radius;                      // она возвращается к левому краю
  }
  arc(x, 60, radius, radius, 0.52, 5.76);
}
