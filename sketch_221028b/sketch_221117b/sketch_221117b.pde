/* //Пример 5-8: Easing
float x;
float easing = 0.01;
float diameter = 12;

void setup() {
size (220, 120);
smooth();
}

void draw(){
float targetX = mouseX;
x += (targetX - x) * easing;
ellipse(x, 40, 12, 12);
println(targetX + "  : " +x);
}
*/

/*
иногда вы хотите сделать линию более плавной несмотря на
неровную траекторию курсора. Эта техника называется easing (улучшение). Для
нее нужны две величины - текущая и следующая (Рис. 5-1). С каждым шагом
текущее значение приближается к следующему:
*/

/*
Значение переменной x всегда стремится к targetX. Скорость, с которой x
стремится к targetX устанавливается переменной easing в диапазоне от 0 до 1.
Невысокое значение easing вызывает большую инерционность, чем высокое.
При easing равной 1 задержки не будет. Когда вы запустите пример 5-8, обе
величины будут выводиться на консоль функцией println(). Заметьте, что когда
вы двигаете мышь, эти числа сильно различаются, но когда мышь неподвижна,
они постепенно уравниваются.
*/

//Пример 5-9: Сглаживание линий с помощью easing
// В этом примере к коду из примера 5-7 (sketch_221117a) применяется техника easing. Линии в этом
//примере более сглажены, чем в примере 5-7:

float x;
float y;
float px;
float py;
float easing = 0.05;

void setup() {
size(480, 120);
smooth();
stroke(0, 102);
}
void draw() {
float targetX = mouseX;
x += (targetX - x) * easing;
float targetY = mouseY;
y += (targetY - y) * easing;
float weight = dist(x, y, px, py);
strokeWeight(weight);
line(x, y, px, py);
py = y;
px = x;
}
