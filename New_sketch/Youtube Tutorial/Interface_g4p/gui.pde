/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:212160:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
  D = source.getValueI();
} //_CODE_:slider1:212160:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:337709:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  col = color(random(0, 360), 255, 255);
} //_CODE_:button1:337709:

public void knob1_turn1(GKnob source, GEvent event) { //_CODE_:knob1:318345:
  println("knob1 - GKnob >> GEvent." + event + " @ " + millis());
  we = source.getValueI();
} //_CODE_:knob1:318345:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  slider1 = new GSlider(this, 12, 24, 230, 48, 10.0);
  slider1.setShowValue(true);
  slider1.setShowLimits(true);
  slider1.setLimits(50.0, 10.0, 200.0);
  slider1.setShowTicks(true);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  button1 = new GButton(this, 84, 84, 80, 30);
  button1.setText("color");
  button1.addEventHandler(this, "button1_click1");
  knob1 = new GKnob(this, 96, 124, 60, 60, 0.8);
  knob1.setTurnRange(110, 70);
  knob1.setTurnMode(GKnob.CTRL_HORIZONTAL);
  knob1.setSensitivity(1);
  knob1.setShowArcOnly(false);
  knob1.setOverArcOnly(false);
  knob1.setIncludeOverBezel(false);
  knob1.setShowTrack(true);
  knob1.setLimits(0.5, 0.0, 20.0);
  knob1.setShowTicks(true);
  knob1.setOpaque(false);
  knob1.addEventHandler(this, "knob1_turn1");
}

// Variable declarations 
// autogenerated do not edit
GSlider slider1; 
GButton button1; 
GKnob knob1; 
